# Generated by Django 3.0.8 on 2020-08-13 17:26

from django.db import migrations, models
import django.db.models.deletion
import siteuser.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('siteuser', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('category_slug', models.SlugField(blank=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100)),
                ('role_slug', models.SlugField(blank=True)),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_title', models.CharField(help_text='Keep titles short.', max_length=100)),
                ('blog_subtitle', models.CharField(help_text='Short line for subtitle.', max_length=150)),
                ('blog_slug', models.SlugField(blank=True, help_text='Slug will be automatically generated.')),
                ('banner_image', models.ImageField(upload_to=siteuser.utils.banner_path)),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('blog_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='siteuser.SiteUser')),
                ('blog_category', models.ManyToManyField(to='blog.Category')),
            ],
            options={
                'db_table': 'blog_post',
            },
        ),
    ]
